{"version":3,"file":"ingester.js","sourceRoot":"/","sources":["lib/ingester.ts"],"names":[],"mappings":"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","sourcesContent":["import {bool, int, uint64} from \"codecomet-js/source/buildkit-port/dependencies/golang/mock.js\";\nimport {digest} from \"codecomet-js/source/buildkit-port/dependencies/opencontainers/go-digest.js\";\nimport {Types} from \"codecomet-js/source/protobuf/types.js\";\nimport {\n    SolveStatus,\n    Vertex,\n    VertexLog,\n} from \"codecomet-js/source/buildkit-port/client/graph.js\"\nimport * as model from \"./model.js\";\nimport { ActionStatus, BuildPipeline, Stack } from \"./model.js\";\nimport * as readline from 'node:readline/promises';\nimport {ReadStream} from \"tty\";\n\nimport * as Sentry from \"@sentry/node\";\nimport \"@sentry/tracing\";\nimport {createHash} from \"node:crypto\";\n\nclass Build implements BuildPipeline {\n    id = \"github.com/codecomet-io/reporter-elastic/plan.js\"\n    name = \"User defined name\"\n    description = \"This is our super test plan, and guess what this description can change at any time\"\n    runID = \"\"\n    started = 0\n    completed = 0\n    status = model.PipelineStatus.Completed\n    runtime = 0\n    machineTime = 0\n    trigger = \"manual\"\n    actionsObject = {}\n    actionsInfo = {\n        total: 0,\n        cached: 0,\n        ran: 0,\n        errored: 0,\n        interrupted: 0,\n        notRan: 0,\n    }\n    // disable repository output for now\n    // it leaks info and isn't currently needed\n    // repository = {\n    //     commit: \"\",\n    //     author: \"\",\n    //     parent: \"\",\n    //     dirty: false,\n    //     location: \"\",\n    // }\n    actor = {\n        id: \"spacedub\",\n        name: \"Space Raccoon\"\n    }\n    // disable host output for now\n    // it creates a lot of noise and isn't currently needed\n    // host = new model.Host(\"host-unique-id\", {\n    //     label1: \"foo\",\n    //     label2: \"bar\",\n    // })\n\n    addLog(log: VertexLog) {\n        if (this.actionsObject[log.Vertex] == null)\n            throw new Error(\"Logs without a registered vertex - panic\")\n\n        if (this.actionsObject[log.Vertex].stdout == undefined) {\n            this.actionsObject[log.Vertex].stdout = []\n        }\n        if (this.actionsObject[log.Vertex].stderr == undefined) {\n            this.actionsObject[log.Vertex].stderr = []\n        }\n        let dt = Buffer.from(log.Data.toString(), \"base64\").toString(\"utf-8\").trim()\n        if (dt != \"\") {\n            // Structured stack traces are transmitted in a data url form\n            if (dt.startsWith(\"data:application/json;base64,\")) {\n                // Decode it, parse it\n                let structured = JSON.parse(Buffer.from(dt.substring(dt.indexOf(\",\") + 1), \"base64\").toString(\"utf-8\"))\n                // Copy that over into a Structured type\n                this.actionsObject[log.Vertex].stack = {\n                    lineNumber: parseInt(structured.linenumber, 10) - 1,\n                    exitCode: parseInt(structured.exitcode, 10),\n                    command: structured.command,\n                    // Source is double encoded, so, decode it, and split by line to facilitate accessing source[linenumber]\n                    source: Buffer.from(structured.source, \"base64\").toString(\"utf-8\").split(\"\\n\"),\n                }\n                /*\n                let stack = this.actionsObject[log.Vertex].stack\n                console.warn(\"line\", stack.linenumber)\n                console.warn(\"exit\", stack.exitCode)\n                console.warn(\"command\", stack.command)\n                // XXX obviously this needs to be tested for boundaries against 0 / stack.source.length\n                console.warn(\"source before:\", stack.source[stack.linenumber-2])\n                console.warn(\"source before:\", stack.source[stack.linenumber-1])\n                console.warn(\"guilty line\", stack.source[stack.linenumber])\n                console.warn(\"source after\", stack.source[stack.linenumber+1])\n                console.warn(\"source after\", stack.source[stack.linenumber+2])\n                 */\n            } else if (log.Stream == 2){\n                this.actionsObject[log.Vertex].stderr.push({\n                    timestamp: Date.parse(log.Timestamp),\n                    logLine: dt\n                })\n            } else {\n                this.actionsObject[log.Vertex].stderr.push({\n                    timestamp: Date.parse(log.Timestamp),\n                    logLine: dt\n                })\n            }\n        }\n\n        /*\n        add.push(<LogEntry>{\n            Timestamp: Date.parse(log.Timestampslack\n            ),\n            Content: atob(log.Data.toString())\n        })\n        */\n    }\n\n    addVertex(vertice: Vertex){\n        if (!vertice.Digest) {\n            throw new Error(\"Missing digest\" + vertice)\n        }\n\n        if (!vertice.Name) {\n            throw new Error(\"Missing name\" + vertice)\n        }\n\n        // Some actions are hidden away - either CodeComet internal shenanigans, or actions authors who want to hide their own internal dance\n        if (vertice.ProgressGroup && vertice.ProgressGroup.weak == true) {\n            return\n            // this.actionsObject[vertice.Digest].progressGroup = vertice.ProgressGroup\n            /*\n            {\n                id: vertice.ProgressGroup.id,\n                name: vertice.ProgressGroup.name,\n                weak: vertice.ProgressGroup.weak\n            }\n            */\n        }\n\n        // Currently, BK leaks internal operations. The right solution is to finish replacing the default client with our own. Short term, very dirty hack by ignoring anything that starts with \"[auth] \"\n        if (vertice.Name.startsWith(\"[auth] \")){\n            return\n        }\n\n        if (!this.actionsObject[vertice.Digest]) {\n            let action = <model.BuildAction>{\n                id: vertice.Digest,\n                name: vertice.Name,\n                digest: vertice.Digest,\n                cached: false,\n                status: ActionStatus.Ignored,\n            }\n\n            if (vertice.Inputs) {\n                action.buildParents = vertice.Inputs\n            }\n\n            this.actionsObject[vertice.Digest] = action\n        }\n\n        if (vertice.Started){\n            this.actionsObject[vertice.Digest].started = Date.parse(vertice.Started)\n            // this.actionsObject[vertice.Digest].datestamp = new Date(Date.parse(vertice.Started)).toISOString()\n            if (!this.started || this.actionsObject[vertice.Digest].started < this.started) {\n                this.started = this.actionsObject[vertice.Digest].started\n                // this.datestamp = new Date(this.timestamp).toISOString()\n                // Temporary hack to create unique Descriptions for each Report - obviously needs to be undone\n                this.description = \"Some Pipeline\" //  + this.Report.Started.toString().slice(-4)\n            }\n            this.actionsObject[vertice.Digest].status = ActionStatus.Started\n        }\n        if (vertice.Completed){\n            this.actionsObject[vertice.Digest].completed = Date.parse(vertice.Completed)\n            this.actionsObject[vertice.Digest].runtime = this.actionsObject[vertice.Digest].completed - this.actionsObject[vertice.Digest].started\n            this.actionsObject[vertice.Digest].status = ActionStatus.Completed\n        }\n        if (vertice.Error){\n            this.actionsObject[vertice.Digest].error = vertice.Error\n            this.actionsObject[vertice.Digest].status = ActionStatus.Errored\n        }\n        if (vertice.Cached) {\n            this.actionsObject[vertice.Digest].cached = true\n            this.actionsObject[vertice.Digest].status = ActionStatus.Cached\n        }\n    }\n\n    wrap() {\n        const actionKeys = Object.keys(this.actionsObject)\n        // Total is easy\n        this.actionsInfo.total = actionKeys.length\n        // Cached is easy\n        this.actionsInfo.cached = actionKeys\n            .filter((key) => this.actionsObject[key].cached)\n            .length\n        // Errored is easy\n        this.actionsInfo.errored = actionKeys\n            .filter((key) => this.actionsObject[key].error)\n            .length\n        // Not ran have not started\n        this.actionsInfo.notRan = actionKeys\n            .filter((key) => !this.actionsObject[key].started)\n            .length\n        // Ran have started, not cached, not errored, finished\n        this.actionsInfo.ran = actionKeys\n            .filter((key) =>\n                this.actionsObject[key].started\n                && !this.actionsObject[key].cached\n                && !this.actionsObject[key].error\n                && this.actionsObject[key].completed\n            )\n            .length\n        // Interrupted has started, not cached, not errored, never finished\n        this.actionsInfo.interrupted = actionKeys\n            .filter((key) =>\n                this.actionsObject[key].started\n                && !this.actionsObject[key].cached\n                && !this.actionsObject[key].error\n                && !this.actionsObject[key].completed\n            )\n            .length\n\n        // if any action errored, the pipeline errored\n        if (actionKeys.some((key) => this.actionsObject[key].error)) {\n            this.status = model.PipelineStatus.Errored\n        } else if (!actionKeys.some((key) => this.actionsObject[key].completed)) { // if any action didn't complete, and we have NOT errored, it means we got cancelled\n            this.status = model.PipelineStatus.Cancelled\n        }\n\n        actionKeys.forEach((key) => {\n            // If there is a more recent finish time, use it\n            if (!this.completed || this.actionsObject[key].completed > this.completed) {\n                this.completed = this.actionsObject[key].completed\n            }\n        })\n\n        let mt: int = 0\n\n        actionKeys\n            .filter((key) => this.actionsObject[key].started && this.actionsObject[key].completed)\n            .forEach((key) => mt += this.actionsObject[key].completed - this.actionsObject[key].started)\n\n        this.machineTime = mt\n        this.runtime = this.completed - this.started\n\n        // FakeID it for now\n        this.runID = 'sha256:' + createHash('sha256')\n            .update(Math.random().toString())\n            .digest('hex')\n\n    }\n}\n\n\n/**\n * Consume a ReadStream and marshal a stream of JSON buildkit graph objects into our data model\n */\n// export class StdinIngester {\n//     private reader: readline.Interface\n//     private build: Build\n\n//     constructor(file: ReadStream, onfinish: (plan: model.BuildPipeline, tasksc: model.BuildActionsObject)=>void){\n//         let transaction = Sentry.startTransaction({\n//             op: \"Ingester\",\n//             name: \"Data ingesting transaction\",\n//         })\n\n//         this.reader = readline.createInterface(file)\n\n//         this.build = new Build()\n\n//         this.reader.on('line', (data : string) => {\n//             if (data.trim() === '')\n//                 return\n\n//             let solveStatus: SolveStatus\n\n//             try {\n//                 solveStatus = <SolveStatus>JSON.parse(data)\n\n//                 if (solveStatus.Logs) {\n//                     solveStatus.Logs.forEach(this.build.addLog.bind(this.build))\n//                 }\n\n//                 if (solveStatus.Vertexes) {\n//                     solveStatus.Vertexes.forEach(this.build.addVertex.bind(this.build))\n//                 }\n//             } catch(e) {\n//                 console.error(\"Failed to marshal JSON data into object. Exception was\", e, \"and data was:\", data)\n\n//                 Sentry.captureException(e, {\n//                     extra: { data }\n//                 })\n//             }\n//         })\n\n//         this.reader.on('close', () => {\n//             // Post-processing and sending to callback\n//             this.build.wrap()\n\n//             // Sentry transaction done\n//             transaction.finish()\n\n//             this.build.actionsObject = {}\n\n//             onfinish(<BuildPipeline>this.build, this.build.actionsObject)\n//         })\n//     }\n// }\n\nexport class BuffIngester {\n    private build: Build\n\n    constructor() {\n        this.build = new Build()\n    }\n\n    ingest(buff: Buffer) : BuildPipeline {\n        let transaction = Sentry.startTransaction({\n            op: \"Ingester\",\n            name: \"Data ingesting transaction\",\n        })\n\n        buff.toString().split('\\n').forEach((data) => {\n            // resist badly formated lines\n            if (data.trim() == '')\n                return\n\n            let solveStatus : SolveStatus\n\n            try {\n                solveStatus = <SolveStatus>JSON.parse(data)\n\n                if (solveStatus.Vertexes) {\n                    solveStatus.Vertexes.forEach(this.build.addVertex.bind(this.build))\n                }\n\n                if (solveStatus.Logs) {\n                    solveStatus.Logs.forEach(this.build.addLog.bind(this.build))\n                }\n\n            } catch(e) {\n                console.error(\"Failed to marshal JSON data into object. Exception was\", e, \"and data was\", data)\n\n                Sentry.captureException(e, {\n                    extra: {\n                        data: data\n                    }\n                })\n            }\n        })\n\n        // post-processing and sending to callback\n        this.build.wrap()\n\n        // Sentry transaction done\n        transaction.finish()\n\n        return this.build\n    }\n}\n"]}