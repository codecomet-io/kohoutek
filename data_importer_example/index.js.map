{"version":3,"file":"index.js","sourceRoot":"/","sources":["data_importer_example/index.ts"],"names":[],"mappings":";AACA,OAAO,EAAC,YAAY,EAAC,MAAM,4CAA4C,CAAC;AACxE,OAAO,MAAM,MAAM,gCAAgC,CAAC;AACpD,OAAO,EAAC,YAAY,EAAC,MAAM,IAAI,CAAC;AAGhC,SAAe,GAAG;;;;;;oBAGV,IAAI,GAAG,YAAY,CAAC,gDAAgD,CAAC,CAAA;oBACrE,KAAK,GAAG,YAAY,CAAC,4DAA4D,CAAC,CAAA;oBAG7D,qBAAM,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;wBAExD,iCAAiC;sBAFuB;;oBAApD,KAAqB,SAA+B,EAAnD,SAAS,QAAA,EAAE,KAAK,QAAA;oBAErB,iCAAiC;oBACjC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;oBACzB,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;oBAC1B,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;oBAC5B,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;oBAEnC,QAAQ;oBACR,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAU,GAAmB;wBACtD,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,MAAM,CAAC,CAAA;wBACxC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,IAAI,CAAC,CAAA;wBACpC,QAAQ,GAAG,CAAC,MAAM,EAAE;4BAChB,KAAK,YAAY,CAAC,MAAM;gCACpB,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAA;gCAC/B,MAAK;4BACT,KAAK,YAAY,CAAC,MAAM;gCACpB,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAA;gCAChC,MAAK;4BACT,KAAK,YAAY,CAAC,OAAO;gCACrB,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;gCAC5B,MAAK;4BACT,KAAK,YAAY,CAAC,SAAS;gCACvB,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAA;gCACtC,MAAK;4BACT,KAAK,YAAY,CAAC,OAAO;gCACrB,OAAO,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAA;gCAChD,MAAK;yBACZ;wBACD,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE;4BACzG,OAAO,CAAC,IAAI,CAAC,4BAA4B,EAAE,GAAG,CAAC,OAAO,CAAC,CAAA;4BACvD,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,GAAG,CAAC,SAAS,CAAC,CAAA;yBACpD;6BAAM;4BACH,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAA;yBACxC;wBACD,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,OAAO,CAAC,CAAA;wBAC1C,IAAI,GAAG,CAAC,aAAa,EAAE;4BACnB,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;yBACzD;wBACD,6BAA6B;wBAC7B,kBAAkB;oBACtB,CAAC,CAAC,CAAA;;;;;CACL;AAED,GAAG,EAAE,CAAA","sourcesContent":["import type {ActionInstance} from \"../data_importer/lib/ts-trace-sdk/model.js\";\nimport {ActionStatus} from \"../data_importer/lib/ts-trace-sdk/model.js\";\nimport Pantry from \"../data_importer/entrypoint.js\";\nimport {readFileSync} from \"fs\";\n\n\nasync function run() {\n    // Retrieve the protobuf definition and the trace file from wherever they are (XHR, file)\n    // Here, just lazily readfilesync them\n    let buff = readFileSync(\"../data_importer/mocks/simple-debian/llb.proto\")\n    let trace = readFileSync(\"../data_importer/mocks/simple-debian/success-fragment.json\")\n\n    // Get the pipeline and the tasks from Pantry\n    let [aPipeline, tasks] = await Pantry(buff, trace, \"{}\")\n\n    // Some stuff about the pipeline:\n    console.warn(\"Pipeline:\")\n    console.warn(aPipeline.id)\n    console.warn(aPipeline.name)\n    console.warn(aPipeline.description)\n\n    // Tasks\n    Object.values(tasks).forEach(function (tsk: ActionInstance) {\n        console.warn(\"Task digest:\", tsk.digest)\n        console.warn(\"Task name:\", tsk.name)\n        switch (tsk.status) {\n            case ActionStatus.Cached:\n                console.warn(\"Task was cached\")\n                break\n            case ActionStatus.NotRan:\n                console.warn(\"Task did not run\")\n                break\n            case ActionStatus.Errored:\n                console.warn(\"Task errored\")\n                break\n            case ActionStatus.Completed:\n                console.warn(\"Task ran and completed\")\n                break\n            case ActionStatus.Started:\n                console.warn(\"Task started but was interrupted\")\n                break\n        }\n        if (tsk.status in [ActionStatus.Errored, ActionStatus.Completed, ActionStatus.Started, ActionStatus.Cached]) {\n            console.warn(\"Time when the task started\", tsk.started)\n            console.warn(\"Time when it ended\", tsk.completed)\n        } else {\n            console.warn(\"Task never started...\")\n        }\n        console.warn(\"Task parents:\", tsk.parents)\n        if (tsk.progressGroup) {\n            console.warn(\"Should Ignore?\", tsk.progressGroup.weak)\n        }\n        // to lookup parents from id:\n        // tasks[digestId]\n    })\n}\n\nrun()\n"]}