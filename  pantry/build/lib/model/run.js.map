{"version":3,"file":"run.js","sourceRoot":"/","sources":["lib/model/run.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,MAAM,CAAN,IAAY,SAUX;AAVD,WAAY,SAAS;IACjB,6CAA6C;IAC7C,gCAAmB,CAAA;IACnB,sFAAsF;IACtF,oCAAuB,CAAA;IACvB,iCAAiC;IACjC,oCAAuB,CAAA;IACvB,8EAA8E;IAC9E,8CAA8C;IAC9C,kCAAqB,CAAA;AACzB,CAAC,EAVW,SAAS,GAAT,SAAS,KAAT,SAAS,QAUpB;AAED;;;;;GAKG;AACH,MAAM,CAAN,IAAY,YAOX;AAPD,WAAY,YAAY;IACpB,iCAAiB,CAAA;IACjB,mCAAmB,CAAA;IACnB,uCAAuB,CAAA;IACvB,mCAAmB,CAAA;IACnB,mCAAmB,CAAA;IACnB,uCAAuB,CAAA;AAC3B,CAAC,EAPW,YAAY,GAAZ,YAAY,KAAZ,YAAY,QAOvB","sourcesContent":["/*\n * RunStatus represents the completion status of the run\n * Possible values are:\n * - errored: an action failed\n * - cancelled: the run was interrupted (by the user, or the process has been otherwise killed)\n * - completed: all actions succesfully returned and the run has completed\n */\nexport enum RunStatus {\n    // At least one non optional task errored out\n    Errored = 'errored',\n    // The plan was interrupted (user interrupt, crash, network shutdown, poney, whatever)\n    Cancelled = 'cancelled',\n    // All tasks returned succesfully\n    Completed = 'completed',\n    // All non-optional tasks returned successfully, but some optional ones failed\n    // This is provisional, and not used right now\n    Degraded = 'degraded',\n}\n\n/*\n * Represents action statuses\n * - cached: the action was not run, as it has already been in the past and is unmodified\n * - errored: the action ran, but failed\n * - completed: the action ran successfully\n */\nexport enum ActionStatus {\n    Cached = 'cached',\n    Errored = 'errored',\n    Completed = 'completed',\n    Ignored = 'ignored',\n    Started = 'started',\n    Cancelled = 'cancelled'\n}"]}