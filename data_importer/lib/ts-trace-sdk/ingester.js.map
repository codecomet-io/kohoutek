{"version":3,"file":"ingester.js","sourceRoot":"/","sources":["lib/ts-trace-sdk/ingester.ts"],"names":[],"mappings":"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","sourcesContent":["import {bool, int, uint64} from \"codecomet-js/source/buildkit-port/dependencies/golang/mock.js\";\nimport {digest} from \"codecomet-js/source/buildkit-port/dependencies/opencontainers/go-digest.js\";\nimport {Types} from \"codecomet-js/source/protobuf/types.js\";\nimport {\n    SolveStatus,\n    Vertex,\n    VertexLog,\n} from \"codecomet-js/source/buildkit-port/client/graph.js\"\nimport * as model from \"./model.js\";\nimport { ActionStatus, BuildPipeline, ActionsObject} from \"./model.js\";\nimport * as readline from 'node:readline/promises';\nimport {ReadStream} from \"tty\";\n\nimport * as Sentry from \"@sentry/node\";\nimport \"@sentry/tracing\";\nimport {createHash} from \"node:crypto\";\n\nclass Build implements BuildPipeline {\n    id = \"github.com/codecomet-io/reporter-elastic/plan.js\"\n    name = \"User defined name\"\n    description = \"This is our super test plan, and guess what this description can change at any time\"\n    runID = \"\"\n    started = 0\n    completed = 0\n    status = model.PipelineStatus.Completed\n    runtime = 0\n    machineTime = 0\n    trigger = \"manual\"\n    actionsObject = {}\n    tasks = {\n        total: 0,\n        cached: 0,\n        ran: 0,\n        errored: 0,\n        interrupted: 0,\n        notRan: 0,\n    }\n    repository = {\n        commit: \"\",\n        author: \"\",\n        parent: \"\",\n        dirty: false,\n        location: \"\",\n    }\n    actor = {\n        id: \"spacedub\",\n        name: \"Space Raccoon\"\n    }\n    node = new model.Host(\"host-unique-id\", {\n        label1: \"foo\",\n        label2: \"bar\",\n    })\n\n    addLog(log: VertexLog) {\n        if (this.actionsObject[log.Vertex] == null)\n            throw new Error(\"Logs without a registered vertex - panic\")\n\n        if (!this.actionsObject[log.Vertex].stdout) {\n            this.actionsObject[log.Vertex].stdout = \"\"\n            this.actionsObject[log.Vertex].stderr = \"\"\n        }\n        let dt = Buffer.from(log.Data.toString(), \"base64\").toString(\"utf-8\").trim()\n        // let dt = atob(log.Data.toString()).trim()\n        if (dt != \"\")\n            if (log.Stream == 2)\n                this.actionsObject[log.Vertex].stderr += new Date(Date.parse(log.Timestamp)) + \" \" + dt.trim() + \"\\n\"\n            else\n                this.actionsObject[log.Vertex].stdout += new Date(Date.parse(log.Timestamp)) + \" \" + dt.trim() + \"\\n\"\n\n        /*\n        add.push(<LogEntry>{\n            Timestamp: Date.parse(log.Timestampslack\n            ),\n            Content: atob(log.Data.toString())\n        })\n        */\n    }\n\n    addVertex(vertice: Vertex){\n        if (!vertice.Digest) {\n            throw new Error(\"Missing digest\" + vertice)\n        }\n\n        if (!vertice.Name) {\n            throw new Error(\"Missing name\" + vertice)\n        }\n\n        if (vertice.ProgressGroup && vertice.ProgressGroup.weak == true) {\n            return\n            // this.actionsObject[vertice.Digest].progressGroup = vertice.ProgressGroup\n            /*\n            {\n                id: vertice.ProgressGroup.id,\n                name: vertice.ProgressGroup.name,\n                weak: vertice.ProgressGroup.weak\n            }\n            */\n        }\n\n        if (!this.actionsObject[vertice.Digest]) {\n            let action = <model.ActionInstance>{\n                id: vertice.Digest,\n                name: vertice.Name,\n                digest: vertice.Digest,\n                cached: false,\n                status: ActionStatus.Ignored,\n            }\n            if (vertice.Inputs)\n                action.parents = vertice.Inputs.filter(function(idx){\n                    if (!(idx in this.actionsObject))\n                        return\n                    return true\n                }.bind(this))\n            this.actionsObject[vertice.Digest] = action\n        }\n\n        if (vertice.Started){\n            this.actionsObject[vertice.Digest].started = Date.parse(vertice.Started)\n            // this.actionsObject[vertice.Digest].datestamp = new Date(Date.parse(vertice.Started)).toISOString()\n            if (!this.started || this.actionsObject[vertice.Digest].started < this.started) {\n                this.started = this.actionsObject[vertice.Digest].started\n                // this.datestamp = new Date(this.timestamp).toISOString()\n                // Temporary hack to create unique Descriptions for each Report - obviously needs to be undone\n                this.description = \"Some Pipeline\" //  + this.Report.Started.toString().slice(-4)\n            }\n            this.actionsObject[vertice.Digest].status = ActionStatus.Started\n        }\n        if (vertice.Completed){\n            this.actionsObject[vertice.Digest].completed = Date.parse(vertice.Completed)\n            this.actionsObject[vertice.Digest].runtime = this.actionsObject[vertice.Digest].completed - this.actionsObject[vertice.Digest].started\n            this.actionsObject[vertice.Digest].status = ActionStatus.Completed\n        }\n        if (vertice.Error){\n            this.actionsObject[vertice.Digest].error = vertice.Error\n            this.actionsObject[vertice.Digest].status = ActionStatus.Errored\n        }\n        if (vertice.Cached) {\n            this.actionsObject[vertice.Digest].cached = true\n            this.actionsObject[vertice.Digest].status = ActionStatus.Cached\n        }\n    }\n\n    wrap(){\n        let plan = this\n        let tsk = this.actionsObject\n        // Total is easy\n        plan.tasks.total = Object.keys(tsk).length\n        // Cached is easy\n        plan.tasks.cached = Object.keys(tsk).filter(function(key){\n            return !!tsk[key].cached\n        }).length\n        // Errored is easy\n        plan.tasks.errored = Object.keys(tsk).filter(function(key){\n            return !!tsk[key].error\n        }).length\n        // Not ran have not started\n        plan.tasks.notRan = Object.keys(tsk).filter(function(key){\n            return !tsk[key].started\n        }).length\n        // Ran have started, not cached, not errored, finished\n        plan.tasks.ran = Object.keys(tsk).filter(function(key){\n            return tsk[key].started && !tsk[key].cached &&!tsk[key].error && tsk[key].completed\n        }).length\n        // Interrupted has started, not cached, not errored, never finished\n        plan.tasks.interrupted = Object.keys(tsk).filter(function(key){\n            return tsk[key].started && !tsk[key].cached &&!tsk[key].error && !tsk[key].completed\n        }).length\n\n        Object.keys(tsk).forEach(function(i9: string){\n            // If there is an errored task, that means... we errored\n            if (tsk[i9].error)\n                plan.status = model.PipelineStatus.Errored\n            // If there is a not completed task, and we have NOT errored, it means we got cancelled\n            if (!tsk[i9].completed && plan.status != model.PipelineStatus.Errored)\n                plan.status = model.PipelineStatus.Cancelled\n            // If there is a more recent finish time, use it\n            if (!plan.completed || tsk[i9].completed > plan.completed)\n                plan.completed = tsk[i9].completed\n        })\n\n        let mt: int = 0\n        Object.keys(tsk).forEach(function(i9: string){\n            if (tsk[i9].completed && tsk[i9].started)\n                mt += tsk[i9].completed - tsk[i9].started\n        })\n        plan.machineTime = mt\n        plan.runtime = plan.completed - plan.started\n\n        // FakeID it for now\n        plan.runID = \"sha256:\" + createHash('sha256')\n            .update(Math.random().toString())\n            .digest('hex')\n\n    }\n}\n\n\n/**\n * Consume a ReadStream and marshal a stream of JSON buildkit graph objects into our data model\n */\nexport class StdinIngester {\n    private reader: readline.Interface\n    private build: Build\n\n//    constructor(file: ReadStream, onfinish: (plan: model.BuildPipeline, tasksc: model.ActionInstance[])=>void){\n    constructor(file: ReadStream, onfinish: (plan: model.BuildPipeline, tasksc: model.ActionsObject)=>void){\n        let transaction = Sentry.startTransaction({\n            op: \"Ingester\",\n            name: \"Data ingesting transaction\",\n        });\n\n        this.reader = readline.createInterface(file)\n\n        let bd = this.build = new Build()\n\n        this.reader.on(\"line\", function(data: string){\n            let d: SolveStatus\n            if (data.trim() == \"\")\n                return\n            // We do resist badly formated lines\n            try{\n                d = <SolveStatus>JSON.parse(data)\n                if (d.Logs) {\n                    d.Logs.forEach(bd.addLog.bind(bd))\n                }\n                if (d.Vertexes) {\n                    d.Vertexes.forEach(bd.addVertex.bind(bd))\n                }\n            }catch(e){\n                console.error(\"Failed to marshal JSON data into object. Exception was\", e, \"and data was:\", data)\n                Sentry.captureException(e, {\n                    extra: {\n                        data: data\n                    }\n                });\n            }\n        })\n\n        this.reader.on(\"close\", function(){\n            // Post-processing and sending to callback\n            bd.wrap()\n            // Sentry transaction done\n            transaction.finish();\n            let tsk = bd.actionsObject\n            bd.actionsObject = {}\n            onfinish(<BuildPipeline>bd, tsk) // Object.values(tsk))\n        })\n    }\n}\n\nexport class BuffIngester {\n    private reader: readline.Interface\n    private build: Build\n\n    constructor(){\n        this.build = new Build()\n    }\n\n    ingest(buff: Buffer /*, onfinish: (plan: model.BuildPipeline, tasksc: model.ActionsObject)=>void*/): BuildPipeline {\n        let transaction = Sentry.startTransaction({\n            op: \"Ingester\",\n            name: \"Data ingesting transaction\",\n        });\n\n\n        let bd = this.build // = new Build()\n\n        buff.toString().split(\"\\n\").forEach(function(data){\n            if (data.trim() == \"\")\n                return\n            let d: SolveStatus\n            // Resist badly formated lines\n            try{\n                d = <SolveStatus>JSON.parse(data)\n                if (d.Logs) {\n                    d.Logs.forEach(bd.addLog.bind(bd))\n                }\n                if (d.Vertexes) {\n                    d.Vertexes.forEach(bd.addVertex.bind(bd))\n                }\n            }catch(e){\n                console.error(\"Failed to marshal JSON data into object. Exception was\", e, \"and data was\", data)\n                Sentry.captureException(e, {\n                    extra: {\n                        data: data\n                    }\n                });\n            }\n        })\n\n        // Post-processing and sending to callback\n        bd.wrap()\n        // Sentry transaction done\n        transaction.finish();\n        // let tsk = bd.actionsObject\n        // bd.actionsObject = {}\n        return <BuildPipeline>bd //, tsk]\n        // onfinish(<BuildPipeline>bd, tsk) // Object.values(tsk))\n    }\n}\n"]}