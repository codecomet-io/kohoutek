{"version":3,"file":"firestore.js","sourceRoot":"/","sources":["lib/firestore.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAEzD,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAExD,OAAO,KAAK,MAAM,MAAM,QAAQ,CAAC;AAEjC,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAG5C,MAAM,OAAO,SAAS;IAKrB;QACC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAE/C,IAAI,CAAC,IAAI,EAAE,CAAC;IACb,CAAC;IAGO,iBAAiB;QACxB,MAAM,CAAC,MAAM,EAAE,CAAC;QAEhB,OAAO;YACN,SAAS,EAAK,OAAO,CAAC,GAAG,CAAC,mBAAmB;YAC7C,WAAW,EAAG,OAAO,CAAC,GAAG,CAAC,qBAAqB;YAC/C,UAAU,EAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB;SAC9C,CAAC;IACH,CAAC;IAGO,IAAI;QACX,IAAI,GAAG,CAAC;QAER,IAAI;YACH,GAAG,GAAG,aAAa,CAAC;gBACnB,WAAW,EAAG,uCAAuC;gBACrD,UAAU,EAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;aACvC,CAAC,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACX,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEjB,OAAO;SACP;QAED,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,GAAS;QACtB,IAAI;YACH,qBAAqB;YACrB,MAAM,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;SAChE;QAAC,OAAO,CAAC,EAAE;YACX,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEjB,OAAO;SACP;QAED,OAAO,CAAC,IAAI,CAAC,0BAA0B,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;QAEjD,OAAO;IACR,CAAC;CACD","sourcesContent":["import type { ServiceAccount } from 'firebase-admin';\nimport type { Firestore as FirestoreType } from 'firebase-admin/firestore';\n\nimport type { Run } from './model.js';\n\nimport { initializeApp, cert } from 'firebase-admin/app';\n\nimport { getFirestore } from 'firebase-admin/firestore';\n\nimport * as dotenv from 'dotenv';\n\nimport { deepCopy } from 'briznads-helpers';\n\n\nexport class Firestore {\n\tserviceAccount : ServiceAccount;\n\tdb : FirestoreType;\n\n\n\tconstructor() {\n\t\tthis.serviceAccount = this.getServiceAccount();\n\n\t\tthis.init();\n\t}\n\n\n\tprivate getServiceAccount() : ServiceAccount {\n\t\tdotenv.config();\n\n\t\treturn {\n\t\t\tprojectId   : process.env.FIREBASE_PROJECT_ID,\n\t\t\tclientEmail : process.env.FIREBASE_CLIENT_EMAIL,\n\t\t\tprivateKey  : process.env.FIREBASE_PRIVATE_KEY,\n\t\t};\n\t}\n\n\n\tprivate init() : void {\n\t\tlet app;\n\n\t\ttry {\n\t\t\tapp = initializeApp({\n\t\t\t\tdatabaseURL : 'https://kohoutek-349c1.firebaseio.com',\n\t\t\t\tcredential  : cert(this.serviceAccount),\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.db = getFirestore(app);\n\t}\n\n\tasync saveRun(run : Run) : Promise<void> {\n\t\ttry {\n\t\t\t// Add a new document\n\t\t\tawait this.db.collection('runs').doc(run.id).set(deepCopy(run));\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.info('Added document with ID: ', run.id);\n\n\t\treturn;\n\t}\n}\n"]}